package it.unibz.inf.ontop.docker.lightweight.postgresql;

import com.google.common.collect.ImmutableList;
import it.unibz.inf.ontop.docker.lightweight.AbstractDockerRDF4JTest;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.sql.SQLException;

public class RasDaMan_Munich extends AbstractDockerRDF4JTest {
    private static final String PROPERTIES_FILE = "/rasdaman/OntoRaster.properties";
    private static final String OBDA_FILE = "/rasdaman/OntoRasterDemo.obda";
    private static final String OWL_FILE = "/rasdaman/OntoRasterX.owl";

    @BeforeAll
    public static void before() throws IOException, SQLException {
        initOBDA(OBDA_FILE, OWL_FILE, PROPERTIES_FILE);
    }

    @AfterAll
    public static void after() throws SQLException {
        release();
    }
    /////////////////////////////////////////
    ////// Checking OntoRaster BEFORE ///////
    /////////////////////////////////////////

    @Test
    public void avgRasterSPATIAL() {
        String query0 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?vector rdfs:label ?regionName .\n"
                + "?vector geo:asWKT ?regionWkt .\n"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (?regionName = 'München'\n)" //Vector region = Linköping (2022-08-24T00:00:00+00:00), Ultimo (2023-09-24T00:00:00+00:00),  München (2023-07-24T00:00:00+00:00)
                + "FILTER (CONTAINS(?rasterName, 'Bavaria_Temperature')\n)"
                + "BIND ('2023-09-04T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)" // Missing DateTime Issue
                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?regionWkt, ?rasterName) AS ?v)"
                + "}\n";

        executeAndCompareValues(query0, ImmutableList.of("\"14331.952\"^^xsd:double"));
    }

    /////////////////////////////////////////
    ////// OntoRaster + OSM + CityGML ///////
    /////////////////////////////////////////

    @Test
    public void getRasterDimension() {

        String query1 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?raster rasdb:rasterName ?raster_name .\n"
                + "FILTER (CONTAINS(?raster_name, 'Elevation')\n)"
                + "BIND (rasdb:rasDimension(?raster_name) AS ?v)"
                + "}\n";
        executeAndCompareValues(query1, ImmutableList.of("\"[0:0,0:671,0:1304]\"^^xsd:string"));
    }

    @Test
    public void avgElevation_Munich() {
        String query2 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?vector a :District .\n"
                + "?vector rdfs:label ?regionName .\n"
                + "?vector geo:asWKT ?regionWkt .\n"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (?regionName = 'Laim'\n)"
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)"
                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?regionWkt, ?rasterName) AS ?v)"
                + "}\n";

        executeAndCompareValues(query2, ImmutableList.of("\"531.421\"^^xsd:double")); //Actual   :["506"^^xsd:string, "532.064"^^xsd:string, "531.421"^^xsd:string] If target not set
    }

    @Test
    public void avgTemperature_Munich2() {
        String query3 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?vector rdfs:label ?regionName .\n"
                + "?vector geo:asWKT ?regionWkt .\n"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (?regionName = 'Laim'\n)"
                + "FILTER (CONTAINS(?rasterName, 'Munich_Temperature')\n)"
                + "BIND ('2022-01-01T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)"
                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?regionWkt, ?rasterName) AS ?v)"
                + "}\n";

        executeAndCompareValues(query3, ImmutableList.of("\"13801.222\"^^xsd:double"));
    }

    @Test
    public void avgElevation_Munich3() {
        String query4 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?dist a :District .\n"
                + "?dist rdfs:label ?distName .\n"
                + "?dist geo:asWKT ?distWkt .\n"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)"
                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?distWkt, ?rasterName) AS ?v)"
                + "FILTER (?v > 540.0\n)"
                + "}\n";

        executeAndCompareValues(query4, ImmutableList.of("\"541.145\"^^xsd:double", "\"541.369\"^^xsd:double", "\"542.039\"^^xsd:double", "\"540.93\"^^xsd:double", "\"559.552\"^^xsd:double", "\"547.363\"^^xsd:double"));
    }

//    @Test
//    public void OSM_Munich() {
//        String query4 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
//                + "PREFIX lgdo:\t<http://linkedgeodata.org/ontology/>\n"
//                + "SELECT (COUNT (?v) AS ?count) {\n"
//                + "?bldg a lgdo:Synagogue .\n"
//                + "?bldg lgdo:bldgType ?bldgType .\n"
//                + "FILTER (?bldgType = 'church'\n)"
//                + "}\n";
//
//        executeAndCompareValues(query4, ImmutableList.of("\"266\"^^xsd:integer"));
//    }

//    @Test
//    public void OSM_Munich2() {
//        String query5 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
//                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
//                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
//                + "PREFIX geof:\t<http://www.opengis.net/def/function/geosparql/>\n"
//                + "PREFIX lgdo:\t<http://linkedgeodata.org/ontology/>\n"
//                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
//                + "SELECT ?v {\n"
//                + "?dist a :District .\n"
//                + "?dist rdfs:label ?distName .\n"
//                + "?dist geo:asWKT ?distWkt .\n"
//                + "?bldg lgdo:bldgType ?bldgType .\n"
//                + "?raster rasdb:rasterName ?rasterName .\n"
//                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
//                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)"
//                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?distWkt, ?rasterName) AS ?v)"
//                + "FILTER (?v < 520.0 && ?bldgType = 'synagogue'\n)"
//                + "}\n";
//
//
//        executeAndCompareValues(query5, ImmutableList.of("\"541.145\"^^xsd:double", "\"541.369\"^^xsd:double", "\"542.039\"^^xsd:double", "\"540.93\"^^xsd:double", "\"559.552\"^^xsd:double", "\"547.363\"^^xsd:double"));
//    }

    @Test
    public void OSM_Munich3() {
        String query6 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX geof:\t<http://www.opengis.net/def/function/geosparql/>\n"
                + "PREFIX lgdo:\t<http://linkedgeodata.org/ontology/>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?dist a :District .\n"
                + "?dist rdfs:label ?distName .\n"
                + "?dist geo:asWKT ?distWkt .\n"
                + "?bldg a lgdo:Synagogue .\n"
                + "?bldg geo:asWKT ?bldgWkt .\n"
                + "FILTER (geof:sfWithin(?bldgWkt, ?distWkt)\n)"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)"
                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?distWkt, ?rasterName) AS ?v)"
//                + "FILTER (geof:sfWithin(?bldgWkt, ?distWkt) && ?bldgType = 'synagogue'\n)"
                + "FILTER (?v < 520.0\n)"
                + "}\n";

        executeAndCompareValues(query6, ImmutableList.of("\"517.755\"^^xsd:double"));
    }

    @Test
    public void OSM_Munich4() {
        String query6 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX geof:\t<http://www.opengis.net/def/function/geosparql/>\n"
                + "PREFIX lgdo:\t<http://linkedgeodata.org/ontology/>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?dist a :District .\n"
                + "?dist rdfs:label ?distName .\n"
                + "?dist geo:asWKT ?distWkt .\n"
                + "?bldg a lgdo:Temple .\n"
                + "?bldg geo:asWKT ?bldgWkt .\n"
                + "FILTER (geof:sfWithin(?bldgWkt, ?distWkt)\n)"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)"
                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?distWkt, ?rasterName) AS ?v)"
                + "FILTER (?v < 530.0\n)"
                + "}\n";

        executeAndCompareValues(query6, ImmutableList.of("\"521.257\"^^xsd:double", "\"520.765\"^^xsd:double", "\"517.755\"^^xsd:double"));
    }

    @Test
    public void OSM_Munich5() {
        String query6 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX geof:\t<http://www.opengis.net/def/function/geosparql/>\n"
                + "PREFIX lgdo:\t<http://linkedgeodata.org/ontology/>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?dist a :District .\n"
                + "?dist rdfs:label ?distName .\n"
                + "?dist geo:asWKT ?distWkt .\n"
                + "?bldg a lgdo:Church .\n"
                + "?bldg geo:asWKT ?bldgWkt .\n"
                + "FILTER (geof:sfWithin(?bldgWkt, ?distWkt)\n)"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timeStamp\n)"
                + "BIND (rasdb:rasSpatialAverage(?timeStamp, ?distWkt, ?rasterName) AS ?v)"
                + "FILTER (?v > 545.0 && ?v < 550.0\n)"
                + "}\n";

        executeAndCompareValues(query6, ImmutableList.of("\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double", "\"547.363\"^^xsd:double"));
    }


    @Test
    public void clipRasterAnyGeom() {
        String query13 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND ('POLYGON ((11.5028 48.1255, 11.5308 48.1255, 11.5308 48.1438, 11.5028 48.1438, 11.5028 48.1255))' AS ?custom_region_wkt\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timestamp\n)" //Vector region = Linköping (2022-08-24T00:00:00+00:00), Ultimo (2023-09-24T00:00:00+00:00),  München (2023-07-24T00:00:00+00:00)
                + "BIND (rasdb:rasClipRasterAnyGeom(?timestamp, ?custom_region_wkt, ?rasterName) AS ?v)"
                + "}\n";

        executeAndCompareValues(query13, ImmutableList.of("\"{{525,526,526,526,526,527,526,526,526,526,525,525,526,526,528,529,528,527,527,526,526,527,526,525,523,523,524,525,528,529,528,526,524,523,523,523,523,522,522,522,522,523,524,522,518,515,515,516,518,521,522,522,522,521,522,521,520,518,519,522,526,527,527,526,525,524,523,522,522,521,522,523,523,523,524,525,526,525,523,522,521,521,521,520,520,520,521,523,524,524,523,522,521,521,521,523,524,525,525,524,524,522},{522,523,524,525,525,526,526,525,524,523,524,524,524,525,526,527,528,527,526,524,523,523,524,525,525,525,524,526,528,530,529,527,526,524,524,525,525,524,523,523,522,522,522,521,519,518,518,518,519,521,521,522,522,522,522,522,521,520,520,523,526,526,525,525,525,525,524,523,522,523,523,523,523,523,523,524,524,524,524,523,524,524,523,522,522,522,523,524,524,524,524,522,523,523,522,522,523,523,523,524,524,524},{521,522,522,524,525,525,526,525,525,525,525,525,525,525,525,524,525,526,525,524,523,523,524,526,525,525,524,524,526,527,527,526,525,525,525,525,525,524,523,523,524,524,524,524,524,524,523,523,519,518,518,519,521,521,521,521,522,522,523,524,525,525,524,525,525,526,525,524,525,525,525,525,524,524,524,525,525,526,527,527,527,525,524,523,524,524,523,524,525,524,523,523,523,524,523,523,523,522,523,525,526,526},{524,523,523,523,524,524,525,525,526,526,526,526,526,525,524,523,523,524,524,523,524,525,525,526,525,524,523,524,525,526,526,525,525,526,526,525,525,524,524,524,525,525,525,526,527,528,527,524,520,516,516,517,519,520,520,520,520,521,522,523,524,524,525,525,527,527,527,526,526,526,526,524,524,525,526,527,527,527,528,528,526,525,524,524,523,523,522,523,524,523,523,522,524,524,523,523,524,525,524,525,524,525},{527,525,524,524,525,524,524,525,525,526,525,526,526,525,524,523,524,524,524,526,527,527,526,526,525,524,524,525,526,526,526,525,525,526,525,524,524,523,523,523,523,524,524,525,526,527,526,523,520,518,517,518,520,521,521,521,521,521,522,523,524,524,525,526,528,528,527,527,526,526,526,525,525,525,527,528,528,528,528,527,526,525,524,523,522,521,520,520,522,522,521,522,522,523,523,522,524,525,524,522,521,522},{527,526,525,525,526,526,526,525,526,526,527,527,528,527,527,526,526,526,526,528,529,528,527,526,525,525,526,526,527,527,526,525,525,525,525,524,523,523,522,522,523,523,525,526,527,526,524,523,522,520,520,520,521,521,522,522,522,522,523,523,524,524,525,526,526,527,526,526,526,526,526,526,526,526,526,527,528,528,528,528,526,526,525,524,523,521,520,519,520,521,522,521,522,522,520,520,520,522,523,522,521,521},{528,527,525,526,527,528,529,530,529,528,529,531,530,529,529,528,528,527,528,530,530,530,529,528,528,528,529,529,530,528,527,526,526,526,525,524,523,523,523,524,524,526,528,529,528,526,524,522,521,521,521,523,524,524,523,521,521,521,522,523,523,523,524,525,525,525,525,525,525,525,525,525,525,525,525,525,526,527,527,526,526,525,525,524,524,522,520,520,521,521,522,523,523,522,521,519,519,521,522,522,521,521},{529,528,527,528,529,530,531,531,530,531,531,532,532,530,529,529,529,529,529,530,531,531,531,531,531,531,531,531,530,530,530,530,529,528,526,525,525,525,526,527,527,528,529,529,529,526,523,522,521,522,524,526,529,528,526,524,523,522,521,521,521,522,524,525,525,525,524,524,524,524,524,525,525,525,524,524,525,525,525,525,525,525,524,524,524,523,523,522,523,524,524,524,524,524,524,522,520,520,520,520,520,522},{529,528,529,529,530,530,530,530,530,531,533,533,532,531,530,530,530,530,530,529,530,531,531,532,532,532,532,531,530,530,531,532,532,531,529,529,529,529,529,529,529,529,529,528,528,528,527,525,525,526,527,529,530,530,529,527,527,526,524,522,521,522,524,524,524,525,525,524,524,524,525,525,525,525,525,524,525,526,526,526,525,524,524,524,525,525,525,525,524,523,523,524,524,525,525,523,522,522,522,520,520,522},{529,529,529,529,529,529,530,530,530,531,532,533,533,532,531,532,532,533,531,531,531,531,532,533,534,534,533,532,531,531,531,531,531,530,530,529,530,529,529,530,530,530,530,530,530,531,530,528,527,527,528,529,530,532,531,530,530,528,525,523,523,524,525,525,525,525,525,525,525,525,525,525,526,527,527,527,528,528,528,527,526,523,522,524,526,527,526,525,524,524,525,525,524,524,524,523,523,525,526,525,523,524},{529,528,528,529,529,529,530,530,530,531,531,532,532,531,531,532,533,534,533,533,533,533,534,534,535,535,535,534,533,534,532,531,530,529,529,528,528,528,528,528,530,531,530,530,531,530,530,528,528,529,530,530,532,532,533,532,531,528,525,524,524,524,526,525,524,524,524,525,525,526,525,525,526,527,528,529,528,527,526,525,523,521,520,522,526,528,528,526,526,526,526,525,524,523,522,523,524,526,527,525,524,526},{528,529,530,531,531,531,530,530,530,530,531,532,531,530,530,531,533,534,534,534,534,535,534,534,534,534,533,533,533,531,531,530,529,529,528,527,527,527,527,528,529,530,531,531,530,530,529,529,530,530,531,532,532,532,532,532,531,529,528,527,527,528,527,526,524,521,522,524,525,524,524,524,523,524,525,526,526,525,523,522,521,520,520,521,524,527,529,530,528,527,526,525,524,522,522,523,525,526,526,526,525,527},{530,530,531,532,532,531,530,529,529,530,531,531,531,530,529,530,531,532,533,533,534,535,536,536,535,534,534,534,533,532,531,529,528,527,527,527,527,527,527,528,529,530,530,530,529,529,529,530,531,530,529,530,530,530,530,530,529,529,528,528,528,527,528,526,524,523,522,523,524,524,523,523,523,523,524,525,526,526,527,523,522,521,521,522,524,528,529,530,528,526,526,525,524,523,522,523,525,526,526,527,529,530},{531,531,532,531,530,529,528,528,528,529,530,530,530,529,528,528,529,530,530,532,534,536,537,536,536,535,535,535,535,535,533,532,530,528,527,527,527,528,529,528,529,528,528,527,526,527,529,531,531,530,530,530,529,528,527,527,526,526,526,526,526,526,526,526,527,526,526,526,525,524,524,524,524,524,524,526,527,528,526,521,520,523,525,527,528,529,529,528,527,526,525,525,525,525,524,525,527,528,529,530,530,530},{530,530,531,531,530,529,528,529,529,529,530,531,530,530,529,529,530,530,530,531,533,534,535,535,534,535,535,535,535,535,533,532,531,529,529,529,529,529,530,530,529,528,527,527,527,529,530,532,533,531,531,530,529,528,527,527,528,528,529,529,529,528,528,528,528,528,529,528,526,525,524,524,524,524,524,524,525,526,526,522,522,526,530,531,532,531,530,528,526,525,525,526,528,529,529,528,529,530,529,529,529,530},{529,530,530,531,531,532,532,532,531,531,531,531,531,530,529,530,530,530,529,529,530,531,532,533,533,533,534,534,533,533,532,530,529,529,530,530,530,530,531,530,530,529,529,529,530,530,531,532,532,531,531,530,529,528,527,529,531,532,532,532,532,530,528,527,528,529,529,528,526,526,525,524,524,525,524,525,525,525,526,523,525,528,531,532,532,531,530,529,528,527,527,528,529,530,531,530,530,529,528,528,529,531},{530,530,531,532,532,533,533,533,533,532,532,531,530,530,530,530,531,531,531,530,530,531,532,532,532,531,531,531,531,532,531,529,528,528,529,530,530,530,530,530,530,530,530,531,531,531,531,530,531,531,530,529,528,527,527,528,530,531,532,533,531,529,528,528,528,529,528,527,527,527,527,526,527,528,528,528,527,526,525,525,524,526,528,529,529,529,529,529,529,529,528,527,528,529,530,531,531,530,528,528,529,531},{532,532,532,532,532,532,532,532,532,532,531,530,530,530,531,531,531,531,531,530,531,531,531,531,531,530,529,528,528,530,530,530,528,528,529,529,529,529,529,529,530,530,530,530,530,530,529,530,530,531,531,529,528,527,527,528,529,531,533,533,532,531,529,528,527,528,528,527,526,527,528,530,531,531,530,528,527,526,526,525,524,524,525,526,527,527,527,528,529,528,527,527,527,528,530,532,532,531,529,528,529,530},{533,533,533,532,532,531,530,529,528,529,528,528,529,529,530,530,530,530,530,529,529,530,531,531,530,529,528,528,528,528,530,530,530,530,529,529,528,528,527,528,528,529,529,528,528,528,529,530,531,532,531,530,529,527,528,529,530,531,534,533,533,533,532,530,529,529,529,528,527,526,529,532,534,533,531,528,527,526,526,526,524,523,523,525,526,526,527,528,529,529,527,527,528,528,530,531,531,530,529,528,529,530},{533,532,531,530,530,529,528,527,526,526,527,527,527,529,530,530,530,530,530,529,529,530,531,530,530,529,527,527,527,529,530,531,531,530,529,527,526,526,526,527,528,530,529,528,528,528,529,531,532,533,532,531,530,530,531,531,532,534,534,533,532,533,533,533,532,531,531,530,529,529,531,533,534,533,532,529,527,526,526,525,523,523,524,525,525,526,527,528,530,529,528,528,531,533,533,533,532,532,531,532,532,533},{530,529,528,528,528,528,528,528,528,528,528,528,529,530,531,531,531,530,530,529,529,530,530,530,529,528,527,527,528,529,531,531,531,530,529,528,527,527,527,527,529,530,530,529,529,529,529,529,531,532,532,532,532,533,534,534,534,534,534,533,533,533,533,533,533,533,532,531,530,530,532,532,533,533,532,530,528,526,524,524,524,525,525,525,526,526,527,528,529,528,528,529,531,533,534,534,533,533,532,532,533,534},{530,530,529,528,529,529,530,530,530,531,530,530,530,532,532,531,531,530,530,530,530,530,529,530,531,530,529,528,529,530,531,531,530,530,530,529,529,528,528,528,528,529,529,529,529,529,529,529,530,531,532,532,533,533,533,533,533,533,532,532,533,532,533,534,534,534,533,532,531,530,530,531,532,533,533,532,530,528,529,527,526,526,526,526,527,527,528,529,529,528,528,528,530,531,532,532,533,533,532,532,533,533},{531,532,531,529,530,530,530,531,531,531,531,531,531,532,532,531,530,530,531,531,531,530,530,531,533,532,531,530,530,531,532,531,530,529,529,530,529,529,528,528,528,528,527,527,528,528,528,529,530,532,533,533,533,532,531,530,531,531,531,530,531,532,533,534,534,534,534,532,531,530,530,531,532,533,533,533,531,530,532,531,530,529,528,527,528,530,532,533,532,532,531,531,531,531,531,532,533,533,533,533,533,532},{533,533,532,531,531,531,531,530,530,530,530,531,531,531,531,530,530,530,530,531,531,531,532,533,534,534,533,530,529,530,531,532,530,529,529,529,529,529,529,529,529,528,527,527,527,527,529,530,531,532,534,535,535,534,532,531,530,530,529,530,531,532,533,531,532,531,529,529,531,531,530,530,530,531,531,532,531,530,531,530,529,529,528,528,529,531,532,532,533,533,534,533,533,532,532,533,533,533,533,533,532,532},{534,533,532,532,531,530,529,529,528,529,530,530,530,531,530,530,530,530,530,530,531,531,531,532,534,534,533,530,528,528,530,530,530,530,529,530,530,530,530,531,530,530,529,529,530,531,532,532,532,531,533,535,536,537,536,533,531,529,528,528,530,531,530,530,528,526,526,526,528,530,530,529,529,530,531,530,529,528,527,527,527,527,527,527,528,529,530,531,532,533,533,533,532,532,533,533,533,533,532,532,531,531},{533,533,532,531,530,529,528,528,528,528,529,530,530,530,530,530,530,530,529,530,530,530,530,531,532,533,532,531,530,530,529,530,530,530,530,530,530,529,529,530,531,531,531,532,534,534,534,532,531,531,532,533,536,536,536,534,530,529,527,527,528,527,526,525,525,526,525,526,528,531,533,532,531,530,529,529,529,528,528,527,527,526,527,527,528,529,530,530,531,531,531,531,530,530,531,531,531,531,530,530,530,530},{532,532,532,531,530,529,529,529,529,528,529,530,531,531,532,532,532,531,530,530,530,530,530,531,531,531,531,530,531,530,529,529,529,530,530,530,529,528,528,529,530,530,532,533,533,533,531,530,530,530,531,534,535,536,536,534,532,530,529,529,528,527,524,522,522,523,526,527,529,531,533,533,531,530,530,531,530,530,529,529,528,527,527,528,529,530,530,530,530,530,531,530,530,530,529,529,528,529,529,530,530,531},{533,532,532,531,530,530,530,529,528,528,529,530,531,532,533,534,535,535,534,533,532,531,531,532,532,531,530,530,529,528,528,528,529,530,530,530,530,529,529,529,530,531,532,532,532,529,528,528,529,530,531,533,535,537,537,536,533,532,529,528,528,527,525,524,522,523,525,527,530,531,530,531,533,535,534,533,532,532,531,531,531,530,531,531,531,529,528,528,529,530,531,532,532,531,529,528,527,526,528,530,531,531},{532,532,531,531,529,528,528,528,528,528,529,530,531,532,533,535,537,538,538,538,537,534,532,532,532,531,530,529,528,527,527,528,528,529,529,528,528,528,528,527,527,528,531,532,531,529,527,528,528,529,529,532,534,535,536,535,534,532,530,528,527,528,527,526,525,525,528,531,533,534,533,533,536,538,536,533,532,533,533,534,534,535,534,533,530,527,526,527,529,531,533,534,533,532,530,528,526,527,528,529,530,531},{531,531,531,530,529,529,529,528,528,529,529,530,532,533,534,535,537,540,540,539,537,534,533,533,532,532,531,530,529,529,529,529,530,529,528,528,527,526,527,527,527,528,530,531,532,531,530,529,531,531,530,529,530,531,531,532,532,532,531,530,531,531,531,532,530,528,530,535,538,537,535,534,533,533,534,531,530,531,532,532,532,532,530,528,526,524,524,525,528,532,533,533,532,531,529,528,528,528,528,528,529,531},{532,531,531,530,532,533,533,532,531,530,531,531,532,533,533,534,535,537,538,536,533,531,531,532,533,533,533,532,532,531,532,532,531,531,530,530,529,528,529,530,533,534,534,534,534,533,533,532,533,533,531,530,529,529,528,528,530,531,533,533,533,534,534,533,534,535,537,540,542,537,534,535,536,536,535,532,529,530,529,529,527,526,526,526,526,526,526,527,529,530,531,530,529,528,528,527,528,528,528,528,528,529},{534,533,531,530,531,533,535,534,533,532,533,533,533,533,533,534,535,536,535,534,531,530,531,532,532,533,533,532,531,531,532,532,532,532,532,532,531,531,532,534,536,537,537,536,534,534,533,534,534,533,531,530,529,529,527,526,528,531,533,533,532,532,532,532,532,535,538,540,538,535,539,541,542,541,538,535,532,530,530,530,528,527,526,527,527,527,528,529,530,530,528,527,527,526,527,528,528,529,528,528,528,528},{535,533,532,532,533,534,535,535,533,533,534,534,534,534,534,534,535,536,536,534,532,532,532,532,532,531,531,531,531,533,534,535,534,534,534,533,532,532,531,532,533,535,535,534,534,533,533,533,532,531,529,527,527,527,526,525,526,529,532,532,532,529,528,528,529,531,535,537,534,532,538,542,543,544,541,536,531,530,531,531,530,530,529,529,529,529,530,531,531,530,528,528,527,527,527,527,528,528,528,527,527,528},{532,533,533,534,535,535,534,533,533,534,534,535,534,533,533,533,533,533,533,533,532,533,533,533,532,531,531,533,534,536,537,536,535,535,534,533,533,531,530,530,529,530,531,532,532,532,533,532,530,527,526,526,527,527,527,526,526,529,531,531,529,526,525,526,527,529,530,529,529,528,531,535,536,538,536,533,531,530,531,532,532,532,532,531,531,532,532,533,531,529,528,528,528,527,527,527,528,528,528,527,527,527},{531,532,534,535,536,536,534,532,533,534,534,535,534,533,532,531,530,530,531,531,531,532,532,531,531,531,532,533,535,537,537,536,536,535,534,533,532,532,530,530,530,529,530,531,532,531,531,531,531,531,530,529,529,530,529,528,527,527,529,529,528,525,524,526,526,527,527,528,527,527,528,527,528,528,529,529,529,529,530,530,532,532,532,531,532,532,532,531,530,529,528,528,527,527,527,528,528,528,528,527,527,528},{531,532,534,535,536,534,532,532,532,534,535,534,534,533,532,531,530,530,531,531,531,532,532,530,529,530,531,533,534,536,537,537,537,536,535,534,533,531,530,529,528,529,529,530,531,530,529,529,529,529,530,530,531,531,529,527,525,525,526,528,528,528,528,527,527,526,526,527,527,527,527,527,528,529,529,529,529,530,530,530,531,531,532,533,533,532,532,530,529,529,528,528,527,527,527,528,529,529,528,528,528,528},{533,533,533,535,535,534,532,532,533,535,536,536,535,534,533,532,531,531,531,531,531,532,531,530,530,530,532,532,533,535,536,536,536,535,535,534,532,531,530,528,528,529,529,529,529,529,528,529,529,530,530,531,531,530,529,526,526,525,526,528,530,530,530,530,528,527,527,528,528,528,528,529,531,532,532,531,531,530,530,531,531,531,532,532,533,532,531,530,530,529,528,527,527,526,528,529,530,530,529,529,528,529},{534,534,534,534,535,535,533,534,535,535,536,535,534,533,532,531,532,532,531,530,530,529,530,531,531,532,532,532,533,534,535,535,535,534,535,535,534,533,532,531,530,530,529,529,530,530,531,531,531,531,532,531,531,531,529,528,527,527,529,529,530,531,530,529,529,528,528,530,530,531,531,532,532,532,531,530,531,532,531,531,531,530,530,531,532,532,533,532,532,531,528,526,526,526,527,529,530,531,530,529,529,530},{534,535,535,535,534,534,534,535,536,536,534,533,534,533,532,533,533,533,531,531,529,529,529,531,532,532,532,532,534,536,536,536,536,536,535,535,534,533,531,531,530,529,530,530,532,533,533,532,530,529,529,531,532,531,530,529,528,528,528,531,532,532,530,529,529,529,530,531,532,534,534,533,531,530,528,529,530,532,532,532,532,530,529,530,530,532,533,534,535,533,530,528,526,526,528,529,529,529,529,528,528,529},{533,534,535,534,533,533,533,534,535,534,533,532,533,534,534,535,535,535,534,532,532,531,531,532,533,534,534,534,535,536,537,536,536,536,535,534,532,531,530,529,529,530,531,532,533,534,532,530,529,528,529,530,531,531,531,530,530,530,530,532,534,533,532,531,531,531,532,532,533,534,534,532,531,530,529,529,530,531,532,532,532,530,529,528,528,531,533,535,536,536,534,531,528,527,528,528,529,529,528,527,527,528},{535,536,535,535,533,532,531,532,532,532,531,531,532,533,534,536,537,537,536,536,535,533,532,533,535,536,536,536,535,535,535,535,535,535,535,534,532,531,530,530,531,532,532,533,533,532,531,530,529,529,529,530,531,531,531,532,532,532,531,530,530,532,533,532,532,533,534,534,535,534,532,530,530,531,530,530,530,530,531,531,531,530,528,527,528,529,531,533,535,536,535,534,531,529,528,528,529,529,528,528,528,529},{537,537,536,535,533,532,532,532,533,533,532,532,533,534,535,535,536,536,537,537,535,533,532,533,535,536,536,536,535,534,535,535,535,536,537,535,532,530,530,532,536,538,536,533,531,531,531,530,529,528,528,529,530,531,532,532,531,531,529,528,529,530,532,531,532,533,533,534,534,533,532,531,532,533,532,530,530,530,530,530,529,528,527,526,526,527,528,530,532,534,535,534,534,532,530,528,528,528,528,528,528,528},{538,537,536,535,533,533,533,534,534,534,534,533,533,535,535,535,535,535,536,536,536,535,534,535,536,536,537,536,534,534,535,536,536,537,537,536,534,533,535,538,541,540,537,533,531,531,531,531,529,528,527,528,530,531,531,531,530,529,528,528,528,527,529,530,532,533,533,533,533,532,532,532,533,533,532,531,530,530,529,529,528,527,527,526,526,526,526,527,528,530,533,534,533,531,530,531,531,529,528,527,527,527},{537,537,536,535,534,533,533,534,535,535,534,533,534,534,535,535,534,534,535,536,536,535,534,535,535,536,537,537,535,535,537,538,538,537,537,538,538,539,541,541,542,539,537,535,533,531,531,531,531,529,528,528,530,531,531,531,530,530,529,529,529,529,529,530,532,533,533,532,532,532,532,531,530,530,530,529,529,529,529,529,529,528,528,527,527,527,527,527,526,526,529,531,531,531,533,533,532,530,529,528,528,527},{535,536,536,535,534,533,533,534,534,534,533,534,534,534,534,534,534,534,535,535,535,534,534,534,534,535,536,537,536,536,538,538,537,536,536,538,539,540,541,540,538,536,535,534,533,532,532,533,532,531,530,530,530,531,531,530,530,530,530,531,532,532,532,532,532,531,531,532,532,533,533,532,530,529,528,527,528,528,529,530,529,528,526,526,527,528,528,528,528,527,528,529,530,531,533,534,532,530,529,529,527,526},{533,533,534,534,534,534,534,533,533,533,533,534,535,535,534,534,535,536,536,535,534,534,533,533,535,536,537,537,537,537,537,537,535,534,534,535,537,538,538,538,536,533,533,533,533,533,533,534,534,533,531,530,530,530,530,529,528,529,531,532,533,533,532,532,530,530,530,532,533,534,535,535,534,532,530,529,528,529,530,530,529,527,525,524,525,526,527,528,528,528,527,528,528,528,529,530,530,529,528,527,527,526},{532,532,533,534,535,535,534,533,532,531,533,535,535,535,535,535,536,536,535,533,533,533,533,533,537,540,541,540,537,536,536,535,534,532,533,533,534,536,536,536,534,533,533,534,534,533,534,534,533,533,532,531,529,529,528,527,528,529,531,533,533,533,531,530,530,530,532,533,535,536,537,537,536,534,532,531,531,531,531,531,530,528,526,523,522,523,525,527,527,527,526,526,526,526,526,526,526,527,527,527,527,527},{533,533,534,535,535,535,534,533,532,532,533,534,534,535,536,536,536,536,535,534,533,535,536,536,537,538,540,538,535,534,534,533,533,533,533,533,534,533,534,534,534,533,534,535,535,533,532,532,533,532,532,531,530,529,529,529,529,530,532,533,534,532,530,529,529,532,533,535,536,535,535,535,535,534,534,534,535,535,534,532,531,529,527,526,527,526,526,526,526,525,524,525,525,525,524,524,524,525,527,528,528,527},{535,536,536,535,535,535,535,534,533,534,534,534,534,534,534,535,536,536,536,536,536,536,537,537,536,537,537,535,533,533,533,534,534,534,534,534,534,533,532,532,533,533,534,535,534,532,532,533,533,533,532,531,532,532,531,531,530,530,531,532,532,531,530,530,531,533,535,535,534,533,533,533,533,533,534,536,539,537,535,532,530,527,527,529,529,529,528,528,527,527,526,526,525,524,524,523,524,525,528,530,530,529},{537,537,537,536,535,535,536,535,535,535,535,534,533,532,532,532,533,535,537,538,538,538,537,537,537,537,537,536,535,535,535,536,536,536,536,536,535,534,533,532,532,533,533,534,533,532,531,532,533,533,532,532,533,533,532,531,531,530,531,532,532,531,530,531,532,534,535,535,534,533,531,530,531,532,533,536,538,537,533,529,526,525,526,528,530,530,529,529,528,529,529,528,527,525,525,525,526,527,529,530,530,530},{538,537,536,535,535,535,535,535,535,535,535,534,533,532,532,532,533,535,538,539,539,538,538,538,539,539,538,537,537,536,537,537,537,537,537,537,536,534,533,532,532,532,532,532,532,531,530,532,533,533,533,533,533,533,533,533,532,531,532,533,532,530,530,531,533,534,534,533,532,531,529,528,529,529,531,533,535,535,532,529,528,527,527,529,530,529,529,528,527,527,527,528,527,526,526,526,527,529,529,529,529,529},{537,536,534,533,533,533,533,534,534,535,535,535,534,535,535,536,536,537,538,539,540,539,538,538,538,538,537,537,537,537,537,537,537,536,536,536,536,535,534,533,532,531,531,531,531,532,533,535,536,536,534,533,533,534,534,534,533,532,531,531,529,528,528,530,531,531,531,530,530,530,530,529,527,528,530,532,533,533,532,532,532,531,530,529,529,529,528,527,526,526,527,527,528,527,526,527,529,530,530,530,530,530},{535,535,534,534,533,532,533,534,535,535,535,535,535,535,536,536,536,536,538,539,539,538,537,536,536,535,536,536,536,536,536,535,535,534,533,534,535,535,535,534,533,532,531,531,531,532,534,537,538,538,536,535,535,535,536,535,534,532,529,528,526,526,526,527,528,528,528,528,529,531,531,529,529,529,531,532,532,532,533,534,534,534,532,531,530,529,528,527,527,527,526,526,526,526,525,525,526,529,531,531,531,531},{535,535,535,535,534,534,535,536,536,535,535,535,534,534,534,535,534,535,537,538,539,539,540,540,539,537,535,535,535,535,535,535,534,534,533,532,532,533,533,533,532,531,531,531,531,532,534,536,538,538,536,536,536,536,536,536,535,534,532,530,528,528,527,527,527,526,525,526,527,529,530,530,529,530,531,531,531,532,533,534,534,534,533,532,532,531,530,530,529,527,526,525,525,524,524,523,525,527,529,530,531,531},{535,536,536,537,537,537,536,536,535,534,534,534,534,534,533,533,533,533,534,537,539,540,542,543,542,540,538,536,535,534,535,535,536,536,535,533,532,531,532,532,532,531,531,532,533,534,536,538,539,539,538,537,536,537,536,536,535,534,534,533,532,531,530,530,528,526,524,525,526,528,529,530,530,531,531,531,530,531,532,532,532,532,531,531,531,532,532,531,530,528,527,527,527,527,526,526,526,527,530,531,531,532},{536,537,537,538,537,537,535,534,534,533,533,533,533,533,533,532,532,533,535,535,536,537,539,542,544,544,542,539,537,534,533,533,534,536,536,535,534,532,532,532,532,532,532,533,534,536,538,540,541,540,538,537,536,536,536,536,534,533,532,533,532,532,532,531,530,529,529,528,527,529,529,530,530,530,530,530,530,530,530,530,530,530,530,530,530,531,530,530,529,529,529,530,530,530,531,530,529,530,531,532,533,532},{536,536,536,535,536,536,535,535,534,533,533,533,533,534,533,534,535,535,535,535,535,534,536,540,543,544,543,541,538,536,534,533,533,534,535,536,535,534,533,533,532,532,532,532,532,534,537,539,540,540,538,536,534,534,535,535,535,533,532,531,532,531,531,530,529,531,532,531,530,530,530,530,529,529,529,530,531,530,530,530,531,530,530,529,530,530,531,532,532,532,531,531,531,532,532,532,532,532,533,533,532,532},{537,537,535,535,535,535,536,535,535,534,534,534,534,534,535,536,536,536,535,534,534,534,534,537,541,543,544,542,540,538,536,534,533,534,536,536,536,536,535,535,534,533,532,532,533,534,535,536,537,537,536,535,533,532,532,534,534,534,533,532,531,530,529,528,529,530,531,531,531,531,532,531,530,530,530,531,530,530,530,530,530,530,529,529,530,532,534,534,534,533,532,532,532,532,532,532,532,532,532,531,531,531},{538,539,539,538,536,536,535,534,533,533,534,535,536,536,536,537,536,534,534,533,534,535,536,537,538,542,542,540,538,535,534,535,535,537,537,537,536,536,536,535,534,533,534,535,534,535,535,535,534,534,534,534,533,533,533,533,533,533,533,532,531,530,529,529,529,530,529,528,529,530,531,532,530,530,531,531,530,530,530,530,531,530,529,528,529,531,533,533,533,532,530,530,530,531,532,531,531,531,531,531,531,532},{540,542,542,540,538,536,535,534,532,533,535,537,538,538,537,536,534,533,533,533,534,535,536,537,539,539,539,536,533,532,533,533,535,536,537,536,536,536,536,535,533,533,534,534,535,536,535,536,535,534,534,534,535,535,535,533,532,530,530,532,531,530,530,531,531,531,530,528,528,530,531,531,531,531,532,532,531,531,531,531,531,531,530,529,529,529,530,531,532,531,529,528,529,531,532,533,533,532,532,531,531,532},{540,541,541,541,539,536,535,534,534,535,536,538,539,539,538,536,535,534,533,533,533,534,535,536,537,537,536,533,533,534,533,533,533,536,536,536,536,536,535,534,533,533,533,534,534,535,536,536,536,535,535,535,535,536,536,535,532,530,530,530,531,531,531,532,532,532,531,529,529,530,532,533,532,532,533,533,532,532,531,531,531,531,530,530,529,529,528,529,531,531,530,530,530,530,531,533,534,534,533,532,530,531},{542,541,540,538,536,536,535,536,536,536,537,537,537,537,537,537,537,535,534,533,532,533,533,534,535,536,537,537,537,537,538,539,539,538,538,538,537,537,536,535,534,533,533,534,534,535,536,536,536,535,535,535,536,536,537,536,534,533,532,532,531,530,529,530,531,531,531,530,531,532,533,534,534,534,535,535,534,533,533,533,532,532,531,530,529,528,528,529,530,532,533,532,531,530,530,532,533,534,534,533,531,531},{542,541,538,537,535,535,536,536,537,537,538,537,538,537,537,537,537,536,534,532,532,532,533,533,535,536,538,539,539,540,541,541,541,540,539,538,538,538,537,536,535,534,533,534,535,536,536,536,536,536,536,536,536,536,537,536,536,534,535,534,533,531,530,530,531,532,533,533,533,533,534,535,536,537,537,536,535,534,535,535,535,534,533,531,529,528,528,528,531,532,533,533,531,530,532,533,534,534,534,533,532,532},{539,538,536,535,534,535,536,537,538,539,539,540,540,540,539,538,538,536,532,531,532,534,534,535,535,535,536,537,538,538,539,539,538,538,538,538,538,536,535,535,535,534,533,533,534,535,535,535,535,535,536,536,535,535,536,535,535,534,534,534,534,533,533,534,534,535,536,536,535,535,535,535,536,535,535,533,531,533,535,537,538,537,536,534,530,528,528,529,530,531,532,531,531,530,531,533,533,533,531,531,532,533},{538,536,535,534,534,535,536,537,537,538,539,539,540,538,538,539,539,537,536,534,534,536,536,535,534,534,534,535,535,536,537,537,537,537,537,537,536,535,534,535,536,535,534,533,533,533,533,533,533,534,535,535,535,534,534,533,534,534,534,534,534,535,536,536,536,537,537,536,534,534,535,536,537,537,535,533,532,532,534,537,538,539,538,535,532,530,530,531,532,532,531,531,531,531,531,532,532,531,530,530,531,533},{536,535,535,534,533,534,536,536,536,535,535,536,535,535,535,536,537,537,536,534,535,535,535,535,535,535,535,535,536,536,537,537,537,537,536,536,536,535,536,538,539,538,536,535,534,534,533,533,533,534,535,535,534,533,533,533,533,534,535,536,535,535,536,537,538,537,536,534,533,532,534,536,537,537,536,534,534,534,534,535,537,538,537,535,533,531,531,533,533,533,533,533,533,533,534,534,534,533,532,531,532,532},{534,534,534,534,533,534,535,537,537,535,534,533,531,530,532,534,535,535,535,535,536,536,535,535,535,535,535,535,535,536,537,537,537,537,536,536,536,537,539,541,541,539,537,535,535,535,535,534,534,534,535,535,535,534,533,533,533,535,537,537,536,536,537,538,538,537,535,533,533,532,533,535,535,535,535,536,536,536,535,535,536,537,536,534,532,531,532,533,534,535,534,534,534,534,534,534,534,534,533,533,532,532}}\"^^xsd:string")); //xsd:array is not available

    }

    @Test
    public void rasGeoTIFF() {
        String query14 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?region a :SubDistrict .\n"
                + "?region rdfs:label ?distName .\n"
                + "?region geo:asWKT ?distWkt .\n"
                + "?raster rasdb:rasterName ?rasterName .\n"
                + "FILTER (?distName = 'Biederstein'\n)"
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND (-32768 AS ?fillNAN\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timestamp\n)"
                + "BIND (rasdb:rasGeoTIFF(?timestamp, ?distWkt, ?rasterName, ?distName, ?fillNAN) AS ?v)"
                + "}\n";
        executeAndCompareValues(query14, ImmutableList.of("\"<folium.folium.Map object at 0x7f504d54e4c0>\"^^xsd:string")); //xsd:array is not available
    }

    @Test
    public void rasGeoTIFF02() {
        String query14 = "PREFIX :\t<https://github.com/aghoshpro/OntoRaster/>\n"
                + "PREFIX rdfs:\t<http://www.w3.org/2000/01/rdf-schema#>\n"
                + "PREFIX geo:\t<http://www.opengis.net/ont/geosparql#>\n"
                + "PREFIX rasdb:\t<https://github.com/aghoshpro/RasterDataCube/>\n"
                + "SELECT ?v {\n"
                + "?region a :District .\n"
                + "?region rdfs:label ?distName .\n"
                + "?region geo:asWKT ?distWkt .\n"
                + "?raster rasdb:rasterName ?rasterName .\n"
//                + "FILTER (?distName = 'Biederstein'\n)" // For all 25 Districts ETC - 2min 20 secs
                + "FILTER (CONTAINS(?rasterName, 'Elevation')\n)"
                + "BIND (-32768 AS ?fillNAN\n)"
                + "BIND ('2000-02-11T00:00:00+00:00'^^xsd:dateTime AS ?timestamp\n)"
                + "BIND (rasdb:rasGeoTIFF(?timestamp, ?distWkt, ?rasterName, ?distName, ?fillNAN) AS ?v)"
                + "}\n";
        executeAndCompareValues(query14, ImmutableList.of("\"<folium.folium.Map object at 0x7f504d54e4c0>\"^^xsd:string")); //xsd:array is not available
    }

}
